
################################################
#### Load Test Parameters (Required)
################################################

OPENVIDU_URL=http://localhost:7880

# Uncomment the following line if you are using OpenVidu 2
#OPENVIDU_SECRET=
# Comment the following 2 lines if you are using OpenVidu 2
LIVEKIT_API_KEY=devkey
LIVEKIT_API_SECRET=secret

SESSION_NAME_PREFIX=LoadTestSession
USER_NAME_PREFIX=User
SECONDS_TO_WAIT_BETWEEN_PARTICIPANTS=5
SECONDS_TO_WAIT_BETWEEN_SESSIONS=0
SECONDS_TO_WAIT_BEFORE_TEST_FINISHED=0
SECONDS_TO_WAIT_BETWEEN_TEST_CASES=0

################################################
#### ELK Monitoring Parameters (Optional)
################################################

ELASTICSEARCH_HOST=
ELASTICSEARCH_USERNAME=
ELASTICSEARCH_PASSWORD=
KIBANA_HOST=


################################################
#### For testing locally
################################################

# If empty, the loadtestapp will launch EC2 instances
# For testing locally use, fill it with the workers ip addresses: WORKER_URL_LIST=195.166.0.1, 195.166.0.2
WORKER_URL_LIST=127.0.0.1


################################################
#### For testing with AWS
################################################

# For launching EC2 instances and allowing to workers upload recordings to S3 bucket
AWS_ACCESS_KEY=
AWS_SECRET_ACCESS_KEY=

# Browser Emulator AMI which will be used for deploying worker instances
WORKER_AMI_ID=
WORKER_INSTANCE_TYPE=c5.xlarge

# Key pair name for worker instances to allow ssh manually connect
WORKER_INSTANCE_KEY_PAIR_NAME=

# By default, the browser-emulator service is listening on:
# 5000 (API REST)
# 5001 (WebSocket)
# 5900 (VNC, only needed if DEBUG_VNC=true)
# The SG will need these ports opened.
WORKER_SECURITY_GROUP_ID=
# AWS Region where the workers will be launched, beware of them being in the same region as the AMI
WORKER_INSTANCE_REGION=us-east-1
WORKER_AVAILABILITY_ZONE=us-east-1f
# Numbers of workers to launch before the test starts
WORKERS_NUMBER_AT_THE_BEGINNING=
# Number of new workers incrementation, if 0 it won't launch a any workers during the test
WORKERS_RAMP_UP=
# Continue the test without asking if there aren't enough workers when ramp up is 0
FORCE_CONTINUE=false

################################################
#### For MANUAL distribution participants to workers
#### (Automatic parameters will be ignored if true)
################################################
MANUAL_PARTICIPANTS_ALLOCATION=true
USERS_PER_WORKER=10

################################################
#### For AUTOMATIC distribution participants to workers
################################################

# Percentage worker limit (based on streams created)
# Reacher this limit, the controller will use a new worker
# Before starting the test, an estimation will be done to ascertain how many users can be allocated to each worker before reaching the threshold 
WORKER_MAX_LOAD=

################################################
#### For VIDEO QUALITY control
################################################

# AWS only
# It will start a new ec2 instance where a new participant will be connected using a real Browser
# it will start to record the session when media node has archieved this value
# Needs an ElasticSearch instance to work
MEDIANODE_LOAD_FOR_START_RECORDING=0
# it will start to record the sessions gruped by the specifyed value. 
# 0: Recording disabled, 1 recording starts each session, 2 recording starts each two session ...
RECORDING_SESSION_GRUPED_BY=0
# Number of new recording workers incrementation, if 0 it won't launch a any workers
RECORDING_WORKERS_AT_THE_BEGINNING=0

################################################
#### QoE Analysis
################################################

# Record each MediaStream in each worker for Quality of Experience analysis
QOE_ANALYSIS_RECORDINGS=false
# Perform qoe analysis in the same worker as they were recorded in, if false the recordings will only be uploaded to S3 or MinIO
QOE_ANALYSIS_IN_SITU=false
# Video information needed for in situ QoE analysis, read https://github.com/OpenVidu/openvidu-loadtest/tree/master/browser-emulator#running-qoe-analysis for more information
VIDEO_PADDING_DURATION=1
VIDEO_FRAGMENT_DURATION=15

################################################
#### For saving recordings in S3
################################################
# Bucket name where the recordings will be saved. Remember to set AWS_ACCESS_KEY and AWS_SECRET_ACCESS_KEY
S3_BUCKET_NAME=

################################################
#### MinIO credentials and information if using it to save recordings and recorded stats instead of S3
################################################
# MinIO Endpoint
MINIO_HOST=
# MinIO Port (default 443)
MINIO_PORT=443
# MinIO Access Key
MINIO_ACCESS_KEY=
# MinIO Secret Key
MINIO_SECRET_KEY=
# MinIO Bucket Name
MINIO_BUCKET=

################################################
#### For retrying the participant creation when it fails
################################################
RETRY_MODE=true
RETRY_TIMES=5

################################################
#### For choosing the video to use
################################################
# Video type options: BUNNY, INTERVIEW, GAME, CUSTOM
VIDEO_TYPE=BUNNY
VIDEO_WIDTH=640
VIDEO_HEIGHT=480
VIDEO_FPS=30
# If VIDEO_TYPE is CUSTOM, you have to specify the video and audio URLs
VIDEO_URL=
AUDIO_URL=

################################################
#### Miscelaneous configuration
################################################
# Insert the users in batches or one by one
BATCHES=false
# Maximum number of concurrent requests. If left blank, defaults to number of CPU processors + 1.
BATCHES_MAX_REQUESTS=
# Wait after user or batch insertion
WAIT_COMPLETE=true
# Install VNC server on workers
DEBUG_VNC=false